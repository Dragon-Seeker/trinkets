plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://maven.terraformersmc.com" }
	maven { url = "https://maven.architectury.dev" }
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven { url = 'https://maven.wispforest.io/releases' }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://server.bbkr.space/artifactory/libs-release" }
	maven { url = 'https://maven.gegy.dev' }
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

loom {
	accessWidenerPath = file("src/main/resources/trinkets.accesswidener")

	runs {
		testmodClient {
			client()
			name = "Testmod Client"
			source sourceSets.testmod
		}
	}
}
dependencies {
	// Base Fabric dependencies
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Mod dependencies
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modApi include("org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	modApi include("org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cca_version}")

	modApi ("io.wispforest:accessories-fabric:${project.accessories_version}")

	modImplementation annotationProcessor("io.wispforest:owo-lib:${rootProject.owo_version}")

	implementation("io.wispforest:endec:0.1.5")
	implementation("io.wispforest.endec:netty:0.1.2")
	implementation("io.wispforest.endec:gson:0.1.3")
	implementation("io.wispforest.endec:jankson:0.1.3")

	// Optional mod dependencies
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
	modCompileOnly "dev.emi:emi-fabric:${emi_version}:api"

	// Dev Runtime
	testmodImplementation sourceSets.main.output
	//modLocalRuntime "dev.emi:emi-fabric:${emi_version}"
	//modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
	//modLocalRuntime "com.terraformersmc:modmenu:${project.mod_menu_version}"

	modLocalRuntime "maven.modrinth:scarves:1.4.3+1.21.1"
	modLocalRuntime ("io.github.cottonmc:LibGui:11.1.0+1.21")
	modLocalRuntime ("io.github.cottonmc:Jankson-Fabric:8.0.0+j1.2.3")
	modLocalRuntime ("io.github.queerbric:pridelib:1.2.1+1.21")
	modLocalRuntime ("maven.modrinth:mD4QIZsg:1.1.1+1.21.1") //Static Data

	modLocalRuntime "maven.modrinth:petworks:0.2.0-alpha.2+mc.1.21.1-fabric"
}

processResources {
	inputs.property "version", project.mod_version
	inputs.property "layer_version", project.layer_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version,
				"layer_version": project.layer_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.20.5 upwards uses Java 21.
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
    setupRepositories(repositories)
}

void setupRepositories(RepositoryHandler repositories) {
	if (project.hasProperty("mavenUrl")) {
        repositories.maven {
            url project.mavenUrl
            credentials {
                username project.mavenUsername
                password project.mavenPassword
            }
        }
    }
}
